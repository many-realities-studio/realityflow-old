name: Actions ðŸ˜Ž
on:
  pull_request: {}
  push: { branches: [main] }
  
jobs:
  requestActivation:
    name: Request activation âœ”
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      # Activate Unity
      - name: Unity - Activate
        uses: game-ci/unity-activate@v2.0.0
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}

  testRunnerInAllModes:
    name: Test all modes âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1
          
      - uses: actions/cache@v2
        with:
          path: UnityPlugin/Library
          key: Library-RealityFlow-TargetPlatform
          restore-keys: |
            Library-RealityFlow-
            Library-
      # Configure test runner
      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: UnityPlugin
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      # Upload artifacts
      - name: Expose as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test results
          path: ${{ steps.myTestStep.outputs.artifactsPath }}
          
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.myTestStep.outputs.coveragePath }}

  activateAndThenReturnLicense:
    name: returnLicense ðŸŽˆ
    runs-on: ubuntu-latest
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1

      # Activate Unity
      - name: Activate Unity
        uses: game-ci/unity-activate@v2.0.0

      # Return License
      - name: Return license
        uses: game-ci/unity-return-license@v2.0.0
